{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Memo\\\\Documents\\\\Full-Stack\\\\my-app\\\\cleanslate\\\\src\\\\Components\\\\Sections\\\\StartedPage\\\\GetStarted.js\";\nimport \"./GetStarted.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet circleCount = 0;\nconst StartPage = () => {\n  // Generate circles at regular intervals\n  setInterval(createAndMoveCircle, 100);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n// Create and move circles randomly\n_c = StartPage;\nfunction createAndMoveCircle() {\n  // Track the number of circles created\n  if (circleCount >= 40) return; // Limit the number of circles\n\n  const circle = document.createElement(\"div\");\n  circle.classList.add(\"background-circle\");\n  document.querySelector(\".background\").appendChild(circle);\n  const startX = Math.random() * window.innerWidth;\n  const startY = Math.random() * window.innerHeight;\n  circle.style.left = `${startX}px`;\n  circle.style.top = `${startY}px`;\n  const speed = Math.random() * 0.1; // Adjust speed as needed\n  const angle = Math.random() * 360; // Random angle in degrees\n\n  // Calculate the horizontal and vertical speed components\n  const horizontalSpeed = Math.cos(angle * (Math.PI / 180)) * speed;\n  const verticalSpeed = Math.sin(angle * (Math.PI / 180)) * speed;\n\n  // Move the circle randomly\n  function moveCircle() {\n    const currentX = parseFloat(circle.style.left);\n    const currentY = parseFloat(circle.style.top);\n    if (currentX < 0 || currentY < 0 || currentX > window.innerWidth || currentY > window.innerHeight) {\n      // Remove the circle when it goes off-screen\n      circle.remove();\n      circleCount--;\n    } else {\n      circle.style.left = `${currentX + horizontalSpeed}px`;\n      circle.style.top = `${currentY + verticalSpeed}px`;\n\n      // Request the next animation frame\n      requestAnimationFrame(moveCircle);\n    }\n  }\n\n  // Start moving the circle\n  moveCircle();\n  circleCount++;\n}\nexport { StartPage };\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Fragment","_Fragment","circleCount","StartPage","setInterval","createAndMoveCircle","children","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","circle","document","createElement","classList","add","querySelector","appendChild","startX","Math","random","window","innerWidth","startY","innerHeight","style","left","top","speed","angle","horizontalSpeed","cos","PI","verticalSpeed","sin","moveCircle","currentX","parseFloat","currentY","remove","requestAnimationFrame","$RefreshReg$"],"sources":["C:/Users/Memo/Documents/Full-Stack/my-app/cleanslate/src/Components/Sections/StartedPage/GetStarted.js"],"sourcesContent":["import \"./GetStarted.css\"\r\n\r\nlet circleCount = 0;\r\n\r\n\r\nconst StartPage = () => {\r\n\r\n    // Generate circles at regular intervals\r\n    setInterval(createAndMoveCircle, 100);\r\n\r\n    return (\r\n        <>\r\n            <div class=\"background\"></div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n// Create and move circles randomly\r\nfunction createAndMoveCircle() {\r\n    // Track the number of circles created\r\n    if (circleCount >= 40) return; // Limit the number of circles\r\n\r\n    const circle = document.createElement(\"div\");\r\n    circle.classList.add(\"background-circle\");\r\n    document.querySelector(\".background\").appendChild(circle);\r\n\r\n    const startX = Math.random() * window.innerWidth;\r\n    const startY = Math.random() * window.innerHeight;\r\n\r\n    circle.style.left = `${startX}px`;\r\n    circle.style.top = `${startY}px`;\r\n\r\n    const speed = Math.random() * 0.1; // Adjust speed as needed\r\n    const angle = Math.random() * 360; // Random angle in degrees\r\n\r\n    // Calculate the horizontal and vertical speed components\r\n    const horizontalSpeed = Math.cos(angle * (Math.PI / 180)) * speed;\r\n    const verticalSpeed = Math.sin(angle * (Math.PI / 180)) * speed;\r\n\r\n    // Move the circle randomly\r\n    function moveCircle() {\r\n        const currentX = parseFloat(circle.style.left);\r\n        const currentY = parseFloat(circle.style.top);\r\n\r\n        if (\r\n            currentX < 0 ||\r\n            currentY < 0 ||\r\n            currentX > window.innerWidth ||\r\n            currentY > window.innerHeight\r\n        ) {\r\n            // Remove the circle when it goes off-screen\r\n            circle.remove();\r\n            circleCount--;\r\n        } else {\r\n            circle.style.left = `${currentX + horizontalSpeed}px`;\r\n            circle.style.top = `${currentY + verticalSpeed}px`;\r\n\r\n            // Request the next animation frame\r\n            requestAnimationFrame(moveCircle);\r\n        }\r\n    }\r\n\r\n    // Start moving the circle\r\n    moveCircle();\r\n    circleCount++;\r\n}\r\n\r\n\r\n\r\nexport {StartPage};"],"mappings":";AAAA,OAAO,kBAAkB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,IAAIC,WAAW,GAAG,CAAC;AAGnB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAEpB;EACAC,WAAW,CAACC,mBAAmB,EAAE,GAAG,CAAC;EAErC,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACIP,OAAA;MAAKQ,KAAK,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBAEhC,CAAC;AAEX,CAAC;;AAKD;AAAAC,EAAA,GAhBMT,SAAS;AAiBf,SAASE,mBAAmBA,CAAA,EAAG;EAC3B;EACA,IAAIH,WAAW,IAAI,EAAE,EAAE,OAAO,CAAC;;EAE/B,MAAMW,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC5CF,MAAM,CAACG,SAAS,CAACC,GAAG,CAAC,mBAAmB,CAAC;EACzCH,QAAQ,CAACI,aAAa,CAAC,aAAa,CAAC,CAACC,WAAW,CAACN,MAAM,CAAC;EAEzD,MAAMO,MAAM,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACC,UAAU;EAChD,MAAMC,MAAM,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGC,MAAM,CAACG,WAAW;EAEjDb,MAAM,CAACc,KAAK,CAACC,IAAI,GAAI,GAAER,MAAO,IAAG;EACjCP,MAAM,CAACc,KAAK,CAACE,GAAG,GAAI,GAAEJ,MAAO,IAAG;EAEhC,MAAMK,KAAK,GAAGT,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;EACnC,MAAMS,KAAK,GAAGV,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;;EAEnC;EACA,MAAMU,eAAe,GAAGX,IAAI,CAACY,GAAG,CAACF,KAAK,IAAIV,IAAI,CAACa,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGJ,KAAK;EACjE,MAAMK,aAAa,GAAGd,IAAI,CAACe,GAAG,CAACL,KAAK,IAAIV,IAAI,CAACa,EAAE,GAAG,GAAG,CAAC,CAAC,GAAGJ,KAAK;;EAE/D;EACA,SAASO,UAAUA,CAAA,EAAG;IAClB,MAAMC,QAAQ,GAAGC,UAAU,CAAC1B,MAAM,CAACc,KAAK,CAACC,IAAI,CAAC;IAC9C,MAAMY,QAAQ,GAAGD,UAAU,CAAC1B,MAAM,CAACc,KAAK,CAACE,GAAG,CAAC;IAE7C,IACIS,QAAQ,GAAG,CAAC,IACZE,QAAQ,GAAG,CAAC,IACZF,QAAQ,GAAGf,MAAM,CAACC,UAAU,IAC5BgB,QAAQ,GAAGjB,MAAM,CAACG,WAAW,EAC/B;MACE;MACAb,MAAM,CAAC4B,MAAM,CAAC,CAAC;MACfvC,WAAW,EAAE;IACjB,CAAC,MAAM;MACHW,MAAM,CAACc,KAAK,CAACC,IAAI,GAAI,GAAEU,QAAQ,GAAGN,eAAgB,IAAG;MACrDnB,MAAM,CAACc,KAAK,CAACE,GAAG,GAAI,GAAEW,QAAQ,GAAGL,aAAc,IAAG;;MAElD;MACAO,qBAAqB,CAACL,UAAU,CAAC;IACrC;EACJ;;EAEA;EACAA,UAAU,CAAC,CAAC;EACZnC,WAAW,EAAE;AACjB;AAIA,SAAQC,SAAS;AAAE,IAAAS,EAAA;AAAA+B,YAAA,CAAA/B,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}